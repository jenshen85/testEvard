// SASS variables are information about icon's compiled state, stored under its original file name
//
// .icon-home
//   width: $icon-home-width
//
// The large array-like variables contain all information about a single icon
// $icon-home: x y offset_x offset_y width height total_width total_height image_path
//
// At the bottom of this section, we provide information about the spritesheet itself
// $spritesheet: width height image $spritesheet-sprites
$client-name: 'client'
$client-x: 190px
$client-y: 0px
$client-offset-x: -190px
$client-offset-y: 0px
$client-width: 76px
$client-height: 71px
$client-total-width: 1334px
$client-total-height: 80px
$client-image: 'sprite.png'
$client: (190px, 0px, -190px, 0px, 76px, 71px, 1334px, 80px, 'sprite.png', 'client', )
$client-white-name: 'client_white'
$client-white-x: 296px
$client-white-y: 0px
$client-white-offset-x: -296px
$client-white-offset-y: 0px
$client-white-width: 76px
$client-white-height: 71px
$client-white-total-width: 1334px
$client-white-total-height: 80px
$client-white-image: 'sprite.png'
$client-white: (296px, 0px, -296px, 0px, 76px, 71px, 1334px, 80px, 'sprite.png', 'client_white', )
$loader-name: 'loader'
$loader-x: 972px
$loader-y: 0px
$loader-offset-x: -972px
$loader-offset-y: 0px
$loader-width: 100px
$loader-height: 71px
$loader-total-width: 1334px
$loader-total-height: 80px
$loader-image: 'sprite.png'
$loader: (972px, 0px, -972px, 0px, 100px, 71px, 1334px, 80px, 'sprite.png', 'loader', )
$loader-white-name: 'loader_white'
$loader-white-x: 842px
$loader-white-y: 0px
$loader-white-offset-x: -842px
$loader-white-offset-y: 0px
$loader-white-width: 100px
$loader-white-height: 71px
$loader-white-total-width: 1334px
$loader-white-total-height: 80px
$loader-white-image: 'sprite.png'
$loader-white: (842px, 0px, -842px, 0px, 100px, 71px, 1334px, 80px, 'sprite.png', 'loader_white', )
$map-marker-name: 'map_marker'
$map-marker-x: 402px
$map-marker-y: 0px
$map-marker-offset-x: -402px
$map-marker-offset-y: 0px
$map-marker-width: 80px
$map-marker-height: 71px
$map-marker-total-width: 1334px
$map-marker-total-height: 80px
$map-marker-image: 'sprite.png'
$map-marker: (402px, 0px, -402px, 0px, 80px, 71px, 1334px, 80px, 'sprite.png', 'map_marker', )
$map-marker-white-name: 'map_marker_white'
$map-marker-white-x: 512px
$map-marker-white-y: 0px
$map-marker-white-offset-x: -512px
$map-marker-white-offset-y: 0px
$map-marker-white-width: 80px
$map-marker-white-height: 71px
$map-marker-white-total-width: 1334px
$map-marker-white-total-height: 80px
$map-marker-white-image: 'sprite.png'
$map-marker-white: (512px, 0px, -512px, 0px, 80px, 71px, 1334px, 80px, 'sprite.png', 'map_marker_white', )
$pad-name: 'pad'
$pad-x: 0px
$pad-y: 0px
$pad-offset-x: 0px
$pad-offset-y: 0px
$pad-width: 65px
$pad-height: 80px
$pad-total-width: 1334px
$pad-total-height: 80px
$pad-image: 'sprite.png'
$pad: (0px, 0px, 0px, 0px, 65px, 80px, 1334px, 80px, 'sprite.png', 'pad', )
$pad-white-name: 'pad_white'
$pad-white-x: 95px
$pad-white-y: 0px
$pad-white-offset-x: -95px
$pad-white-offset-y: 0px
$pad-white-width: 65px
$pad-white-height: 80px
$pad-white-total-width: 1334px
$pad-white-total-height: 80px
$pad-white-image: 'sprite.png'
$pad-white: (95px, 0px, -95px, 0px, 65px, 80px, 1334px, 80px, 'sprite.png', 'pad_white', )
$protect-name: 'protect'
$protect-x: 622px
$protect-y: 0px
$protect-offset-x: -622px
$protect-offset-y: 0px
$protect-width: 80px
$protect-height: 71px
$protect-total-width: 1334px
$protect-total-height: 80px
$protect-image: 'sprite.png'
$protect: (622px, 0px, -622px, 0px, 80px, 71px, 1334px, 80px, 'sprite.png', 'protect', )
$protect-white-name: 'protect_white'
$protect-white-x: 732px
$protect-white-y: 0px
$protect-white-offset-x: -732px
$protect-white-offset-y: 0px
$protect-white-width: 80px
$protect-white-height: 71px
$protect-white-total-width: 1334px
$protect-white-total-height: 80px
$protect-white-image: 'sprite.png'
$protect-white: (732px, 0px, -732px, 0px, 80px, 71px, 1334px, 80px, 'sprite.png', 'protect_white', )
$truck-name: 'truck'
$truck-x: 1102px
$truck-y: 0px
$truck-offset-x: -1102px
$truck-offset-y: 0px
$truck-width: 101px
$truck-height: 71px
$truck-total-width: 1334px
$truck-total-height: 80px
$truck-image: 'sprite.png'
$truck: (1102px, 0px, -1102px, 0px, 101px, 71px, 1334px, 80px, 'sprite.png', 'truck', )
$truck-white-name: 'truck_white'
$truck-white-x: 1233px
$truck-white-y: 0px
$truck-white-offset-x: -1233px
$truck-white-offset-y: 0px
$truck-white-width: 101px
$truck-white-height: 71px
$truck-white-total-width: 1334px
$truck-white-total-height: 80px
$truck-white-image: 'sprite.png'
$truck-white: (1233px, 0px, -1233px, 0px, 101px, 71px, 1334px, 80px, 'sprite.png', 'truck_white', )
$spritesheet-width: 1334px
$spritesheet-height: 80px
$spritesheet-image: 'sprite.png'
$spritesheet-sprites: ($client, $client-white, $loader, $loader-white, $map-marker, $map-marker-white, $pad, $pad-white, $protect, $protect-white, $truck, $truck-white, )
$spritesheet: (1334px, 80px, 'sprite.png', $spritesheet-sprites, )

// The provided mixins are intended to be used with the array-like variables
//
// .icon-home
//   @include sprite-width($icon-home)
//
// .icon-email
//   @include sprite($icon-email)
//
// Example usage in HTML:
//   `display: block` sprite:
//   <div class="icon-home"></div>
//
// To change `display` (e.g. `display: inline-block;`), we suggest using a common CSS class:
//   // CSS
//   .icon {
//     display: inline-block;
//   }
//
//   // HTML
//   <i class="icon icon-home"></i>
@mixin sprite-width($sprite)
  width: nth($sprite, 5)

@mixin sprite-height($sprite)
  height: nth($sprite, 6)

@mixin sprite-position($sprite)
  $sprite-offset-x: nth($sprite, 3)
  $sprite-offset-y: nth($sprite, 4)
  background-position: $sprite-offset-x  $sprite-offset-y

@mixin sprite-image($sprite)
  $sprite-image: nth($sprite, 9)
  background-image: url(#{$sprite-image})

@mixin sprite($sprite)
  @include sprite-image($sprite)
  @include sprite-position($sprite)
  @include sprite-width($sprite)
  @include sprite-height($sprite)

// The `sprites` mixin generates identical output to the CSS template
//   but can be overridden inside of SASS
//
// @include sprites($spritesheet-sprites)
@mixin sprites($sprites)
  @each $sprite in $sprites
    $sprite-name: nth($sprite, 10)
    .#{$sprite-name}
      @include sprite($sprite)
